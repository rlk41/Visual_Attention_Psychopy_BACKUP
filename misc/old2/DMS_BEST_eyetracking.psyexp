<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1440, 900]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="grey" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="DMS_BEST_eyetracking" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="SR Research Ltd" valType="str" updates="None" name="eyetracker"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="Pyglet" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('LEFT_BUTTON', 'MIDDLE_BUTTON', 'RIGHT_BUTTON')" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <EyetrackerRecordComponent name="etRecord">
        <Param val="Start and Stop" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
      <PolygonComponent name="Fixation">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Fixation" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.0025, 0.0025)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="sample">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial[&quot;stimImage&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="sample" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.125, 0.125)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial[&quot;responseImage1&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="float(thisTrial[&quot;responseImage1_X&quot;]), float(thisTrial[&quot;responseImage1_Y&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial[&quot;responseImage2&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="float(thisTrial[&quot;responseImage2_X&quot;]), float(thisTrial[&quot;responseImage2_Y&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial[&quot;responseImage3&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="float(thisTrial[&quot;responseImage3_X&quot;]), float(thisTrial[&quot;responseImage3_Y&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="polygon">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="4.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Delay">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Delay" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <RegionOfInterestComponent name="roi">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="None" name="debug"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="look at" valType="str" updates="None" name="endRoutineOn"/>
        <Param val="0.1" valType="num" updates="None" name="lookDur"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="roi" valType="code" updates="None" name="name"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial['targetPos']" valType="list" updates="set every repeat" name="pos"/>
        <Param val="every look" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="roi onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </RegionOfInterestComponent>
      <PolygonComponent name="etrecord_pos">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="etrecord_pos" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="etRecord.pos" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="codeStart">
      <CodeComponent name="code">
        <Param val="import random&amp;#10;import pandas as pd &amp;#10;from math import atan2, degrees&amp;#10;&amp;#10;# random.uniform? or nonparametric &amp;#10;&amp;#10;# MONKEYS WERE REWARDED DO WE NEED TO REWARD SIGNAL CORRECT?&amp;#10;# TIMING OF DELAY&amp;#10;&amp;#10;#Monkeys were trained to sit comfortably in a primate chair inside a sound &amp;#10;#attenuating behavioral testing booth. They were seated &amp;#10;#50 cm &amp;#10;#away from a LCD monitor with a 144-Hz refresh rate (ASUS, Taiwan). &amp;#10;# (fixation window radius: 2 to 3 visual degrees) &amp;#10;#cued item together with either one or two distractors &amp;#10;#presented at the same eccentricity (3° to 8°), &amp;#10;#but different visual quadrants #as the cued object.&amp;#10;&amp;#10;#The position of the cued object and the distractors were &amp;#10;#always randomly chosen. Monkeys were rewarded with a few drops of diluted &amp;#10;#juice if they performed a saccade toward the cued item. Behavioral performance &amp;#10;#was high for each of the monkeys (monkey S: 77% over 41 sessions, monkey L: &amp;#10;#75% over 30 sessions). Monkeys were trained on this task using a library &amp;#10;#of 22 sample images. For recordings, we used a subset of these images (12), &amp;#10;#choosing a total of 3 per session. Most sessions (65 out of 71) used the 3 &amp;#10;#objects depicted in Fig. 1: an orange, a green block, and a blue car.&amp;#10;&amp;#10;&amp;#10;&amp;#10;# BASTOS &amp;#10;# monitor_distance = 50 &amp;#10;&amp;#10;# OP4&amp;#10;monitor_distance = 54 &amp;#10;&amp;#10;#fmIR? &amp;#10;&amp;#10;&amp;#10;fixation_degrees = 2.5 &amp;#10;ecc_upper_deg = 8&amp;#10;ecc_lower_deg = 3 &amp;#10;&amp;#10;fixation_radius_cm = monitor_distance * tan(fixation_degrees*pi/180)&amp;#10;&amp;#10;eccentricity_upper_range_cm = monitor_distance * tan(ecc_upper_deg*pi/180) &amp;#10;eccentricity_lower_range_cm = monitor_distance * tan(ecc_lower_deg*pi/180)&amp;#10;&amp;#10;#54 upper = 7.58&amp;#10;#54 lower = 2.83&amp;#10;&amp;#10;ecc = (eccentricity_upper_range_cm - eccentricity_lower_range_cm)&amp;#10;center_ecc = eccentricity_lower_range_cm + (ecc /2)&amp;#10;&amp;#10;center_x_UR = center_ecc * cos(45*pi/180)&amp;#10;center_y_UR = center_ecc * sin(45*pi/180)&amp;#10;&amp;#10;center_x_UL = center_ecc * cos(135*pi/180)&amp;#10;center_y_UL = center_ecc * sin(135*pi/180)&amp;#10;&amp;#10;center_x_LR = center_ecc * cos(225*pi/180)&amp;#10;center_y_LR = center_ecc * sin(225*pi/180)&amp;#10;&amp;#10;center_x_LL = center_ecc * cos(315*pi/180)&amp;#10;center_y_LL = center_ecc * sin(315*pi/180)&amp;#10;&amp;#10;pos = [[center_x_UR,center_y_UR],[center_x_UL,center_y_UL],&amp;#10;        [center_x_LR,center_y_LR],[center_x_LL,center_y_LL]]&amp;#10;&amp;#10;height = ecc * sin(45*pi/180)&amp;#10;width = ecc * cos(45*pi/180)&amp;#10;&amp;#10;#responseImage_size = (4,4)&amp;#10;responseImage_size = (width,height)&amp;#10;&amp;#10;print(monitor_distance, eccentricity_upper_range_cm, &amp;#10;            eccentricity_lower_range_cm, ecc, center_ecc)&amp;#10;# 54 &amp;#10;# 7.589205073929137 2.830020081284225 &amp;#10;# 4.759184992644912 2.379592496322456&amp;#10;print(pos)&amp;#10;print(&quot;height: {} width: {}&quot;.format(height, width))&amp;#10;&amp;#10;&amp;#10;trialNum = 5&amp;#10;baseline_duration=5&amp;#10;delayTime= .5 &amp;#10;delayTime_dist = .2&amp;#10;etrecord_duration=6&amp;#10;myCount1 = 0 &amp;#10;myCount2 = 0 &amp;#10;myCount3 = 0 &amp;#10;myCount4 = 0 &amp;#10;&amp;#10;#pos=[(.25,.25),(-.25,.25),(.25,-.25),(-.25,-.25)]&amp;#10;#locations = ['topright','topleft','bottomright','bottomleft']&amp;#10;pictures  = ['images/picture_1.png','images/picture_2.png','images/picture_3.png']&amp;#10;blockTypes = [&quot;PRED&quot;,&quot;UNPRED&quot;,&quot;PRED&quot;,&quot;UNPRED&quot;]&amp;#10;&amp;#10;# log params &amp;#10;params = {&quot;height&quot;:height, &quot;width&quot;:width}&amp;#10;&amp;#10;trial_list = []&amp;#10;block_list = [] &amp;#10;&amp;#10;blockNum = len(blockTypes)&amp;#10;testing = False &amp;#10;&amp;#10;trial_count = 0 &amp;#10;for i_block in range(blockNum):&amp;#10;    blockType = blockTypes[i_block]&amp;#10;    &amp;#10;    &amp;#10;    if blockType == &quot;PRED&quot;: &amp;#10;        stimImage_i = random.randrange(0,3)&amp;#10;        stimImage = pictures[stimImage_i]&amp;#10;&amp;#10;    for i in range(trialNum):&amp;#10;        delayTime = random.uniform(0.5, 1.2)&amp;#10;&amp;#10;        if blockType == &quot;UNPRED&quot;: &amp;#10;            stimImage_i = random.randrange(0,3)&amp;#10;            stimImage = pictures[stimImage_i]&amp;#10;&amp;#10;        print(&quot;{} {} {} {}&quot;.format(blockType, i_block, i, stimImage_i ))&amp;#10;        &amp;#10;        &amp;#10;##        pos_ecc = random.randrange(int(eccentricity_lower_range_cm), &amp;#10;##        int(eccentricity_upper_range_cm))&amp;#10;#        pos_ecc = random.uniform(eccentricity_lower_range_cm, &amp;#10;#                    eccentricity_upper_range_cm)&amp;#10;#&amp;#10;##        pos = [ ( round(pos_ecc*p[0],2), round(pos_ecc*p[1],2) ) \&amp;#10;##                for p in [[1.0,1.0],[1.0,-1.0],[-1.0,-1.0],[-1.0,1.0]]]&amp;#10;#&amp;#10;#        pos = [ ( round(pos_ecc*cos(p*pi/180),2), &amp;#10;#                    round(pos_ecc*sin(p*pi/180),2) ) \&amp;#10;#                for p in [45, 135, 225, 315]]&amp;#10;#        &amp;#10;#        &amp;#10;&amp;#10;        &amp;#10;        &amp;#10;        #pos=[(.25,.25),(-.25,.25),(.25,-.25),(-.25,-.25)]&amp;#10;        &amp;#10;        location_ind = [0,1,2,3]&amp;#10;        picture_ind =  [0,1,2]&amp;#10;        pos_ind = [0,1,2,3]&amp;#10;&amp;#10;#        random.shuffle(locations)&amp;#10;#        random.shuffle(pictures)&amp;#10;        random.shuffle(pos)&amp;#10;        print(pos)&amp;#10;&amp;#10;        #random.shuffle(location_ind)&amp;#10;        #random.shuffle(picture_ind)&amp;#10;        #random.shuffle(pos_ind)&amp;#10;&amp;#10;        responseImage1              = pictures[picture_ind[0]]&amp;#10;        responseImage1_i            = picture_ind[0]&amp;#10;        #responseImage1_location     = locations[location_ind[0]]&amp;#10;        #responseImage1_location_i   = location_ind[0]&amp;#10;        responseImage1_pos          = pos[0]&amp;#10;        responseImage1_X            = pos[0][0]&amp;#10;        responseImage1_Y            = pos[0][1]&amp;#10;&amp;#10;        #responseImage1_pos_ind      = pos_ind[0]&amp;#10;&amp;#10;        responseImage2              = pictures[picture_ind[1]]&amp;#10;        responseImage2_i            = picture_ind[1]&amp;#10;        #responseImage2_location     = locations[location_ind[1]]&amp;#10;        #responseImage2_location_i   = location_ind[1]&amp;#10;        responseImage2_pos          = pos[1]&amp;#10;        responseImage2_X            = pos[1][0]&amp;#10;        responseImage2_Y            = pos[1][1]&amp;#10;&amp;#10;        #responseImage2_pos_ind      = pos_ind[1]&amp;#10;&amp;#10;        responseImage3              = pictures[picture_ind[2]]&amp;#10;        responseImage3_i            = picture_ind[2]&amp;#10;        #responseImage3_location     = locations[location_ind[2]]&amp;#10;        #responseImage3_location_i   = location_ind[2]&amp;#10;        responseImage3_pos          = pos[2]&amp;#10;        responseImage3_X            = pos[2][0]&amp;#10;        responseImage3_Y            = pos[2][1]&amp;#10;&amp;#10;        #responseImage3_pos_ind      = pos_ind[2]&amp;#10;&amp;#10;        &amp;#10;&amp;#10;&amp;#10;        app = { &quot;blockType&quot;:blockType, &quot;blockNum&quot;:blockNum, &amp;#10;        &quot;delay_time&quot;:delayTime, &amp;#10;        &quot;stimImage_i&quot;:stimImage_i, &quot;stimImage&quot;:stimImage, &amp;#10;        &quot;responseImage1&quot;:responseImage1, &amp;#10;        &quot;responseImage1_i&quot;:responseImage1_i, &amp;#10;        &quot;responseImage1_pos&quot;:responseImage1_pos,&amp;#10;        &quot;responseImage1_X&quot;:responseImage1_X,&amp;#10;        &quot;responseImage1_Y&quot;:responseImage1_Y,&amp;#10;&amp;#10;        #&quot;responseImage1_pos_ind&quot;:responseImage1_pos_ind, &amp;#10;        #&quot;responseImage1_location&quot;:responseImage1_location,&amp;#10;        #&quot;responseImage1_location_i&quot;:responseImage1_location_i,&amp;#10;        &quot;responseImage2&quot;:responseImage2, &amp;#10;        &quot;responseImage2_i&quot;:responseImage2_i, &amp;#10;        &quot;responseImage2_pos&quot;:responseImage2_pos, &amp;#10;        &quot;responseImage2_X&quot;:responseImage2_X, &amp;#10;        &quot;responseImage2_Y&quot;:responseImage2_Y, &amp;#10;        #&quot;responseImage2_pos_ind&quot;:responseImage2_pos_ind, &amp;#10;        #&quot;responseImage2_location&quot;:responseImage2_location, &amp;#10;        #&quot;responseImage2_location_i&quot;:responseImage2_location_i,&amp;#10;        &quot;responseImage3&quot;:responseImage3, &amp;#10;        &quot;responseImage3_i&quot;:responseImage3_i, &amp;#10;        &quot;responseImage3_pos&quot;:responseImage3_pos, &amp;#10;        &quot;responseImage3_X&quot;:responseImage3_X, &amp;#10;        &quot;responseImage3_Y&quot;:responseImage3_Y, &amp;#10;&amp;#10;        #&quot;responseImage3_pos_ind&quot;:responseImage3_pos_ind, &amp;#10;        #&quot;responseImage3_location&quot;:responseImage3_location, &amp;#10;        #&quot;responseImage3_location_i&quot;:responseImage3_location_i}&amp;#10;        }&amp;#10;        &amp;#10;        trial_list.append(app)&amp;#10;    block_list.append(trial_list) &amp;#10;    trial_list = [] &amp;#10;    &amp;#10;&amp;#10;trial_list1 = block_list[0]&amp;#10;trial_list2 = block_list[1]&amp;#10;trial_list3 = block_list[2]&amp;#10;trial_list4 = block_list[3]&amp;#10;&amp;#10;#trial_dict = trial_list1[0]&amp;#10;thisTrial = trial_list1[0]&amp;#10;thisTrial_2 = trial_list2[0]&amp;#10;thisTrial_3 = trial_list3[0]&amp;#10;thisTrial_4 = trial_list4[0]&amp;#10;&amp;#10;#&amp;#10;##dirpath = _thisDir + os.sep + u'data/%s/%s/%s' % (expInfo['participant'], expName, expInfo['date'])&amp;#10;##dirpath = _thisDir + os.sep + u'data/%s/%s/%s' % (expInfo['participant'], expName, expInfo['date'])&amp;#10;#&amp;#10;#dirpath=&quot;/Users/kleinrl/Visual_Attention&quot;&amp;#10;#&amp;#10;#os.makedirs(dirpath, exist_ok=True)&amp;#10;#dfs = []&amp;#10;#for i_block in range(len(blockTypes)): &amp;#10;#    block = block_list[i_block]&amp;#10;#    blockType = blockTypes[i_block]&amp;#10;#    &amp;#10;#    df = pd.DataFrame(block)&amp;#10;#    outfile = &quot;{}/{}-{}.csv&quot;.format(dirpath, i_block, blockType)&amp;#10;#    df.to_csv(outfile)&amp;#10;#    &amp;#10;#    dfs.append(df)&amp;#10;#&amp;#10;#df_all = pd.concat(dfs)&amp;#10;#outfile = &quot;{}/{}&quot;.format(dirpath,&quot;ALL.csv&quot;) &amp;#10;#df_all.to_csv(outfile)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;dirpath = _thisDir + os.sep + u'data/%s/%s/%s' % (expInfo['participant'], expName, expInfo['date'])&amp;#10;os.makedirs(dirpath, exist_ok=True)&amp;#10;&amp;#10;dfs = []&amp;#10;for i_block in range(len(blockTypes)): &amp;#10;    block = block_list[i_block]&amp;#10;    blockType = blockTypes[i_block]&amp;#10;    &amp;#10;    df = pd.DataFrame(block)&amp;#10;    outfile = &quot;{}/{}-{}.csv&quot;.format(dirpath, i_block, blockType)&amp;#10;    df.to_csv(outfile)&amp;#10;    print(&quot;outfile: {}&quot;.format(outfile))&amp;#10;    dfs.append(df)&amp;#10;&amp;#10;df_all = pd.concat(dfs)&amp;#10;outfile = &quot;{}/{}&quot;.format(dirpath,&quot;ALL.csv&quot;) &amp;#10;df_all.to_csv(outfile)&amp;#10;&amp;#10;myCount = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="myCount = (myCount + 1);&amp;#10;if ((myCount &gt; trialNum)) {&amp;#10;    trials.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="myCount = myCount + 1&amp;#10;if myCount &gt; trialNum:&amp;#10;    trials.finished = True" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#  &amp;#10;#for k in thisTrial.keys():&amp;#10;#    thisExp.addData(k, trial_dict[k])&amp;#10;#&amp;#10;#    &amp;#10;#" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="baseline">
      <TextComponent name="text_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$baseline_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="eyetracking_record"/>
    <Routine name="record"/>
    <Routine name="trial_2">
      <EyetrackerRecordComponent name="etRecord_2">
        <Param val="Start and Stop" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
      <PolygonComponent name="Fixation_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Fixation_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.0025, 0.0025)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="sample_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_2[&quot;stimImage&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="sample_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.125, 0.125)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_2[&quot;responseImage1&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_2[&quot;responseImage1_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_2[&quot;responseImage2&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_2[&quot;responseImage2_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_5">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_2[&quot;responseImage3&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_2[&quot;responseImage3_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="polygon_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="4.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Delay_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Delay_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <RegionOfInterestComponent name="roi_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="None" name="debug"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="look at" valType="str" updates="None" name="endRoutineOn"/>
        <Param val="0.1" valType="num" updates="None" name="lookDur"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="roi_2" valType="code" updates="None" name="name"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_2['targetPos']" valType="list" updates="set every repeat" name="pos"/>
        <Param val="every look" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="roi onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </RegionOfInterestComponent>
      <PolygonComponent name="etrecord_pos_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="etrecord_pos_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="etRecord.pos" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="trial_3">
      <EyetrackerRecordComponent name="etRecord_3">
        <Param val="Start and Stop" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
      <PolygonComponent name="Fixation_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Fixation_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.0025, 0.0025)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="sample_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_3[&quot;stimImage&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="sample_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.125, 0.125)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_6">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_3[&quot;responseImage1&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_3[&quot;responseImage1_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_7">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_3[&quot;responseImage2&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_3[&quot;responseImage2_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_8">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_3[&quot;responseImage3&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_3[&quot;responseImage3_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="polygon_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="4.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Delay_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Delay_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <RegionOfInterestComponent name="roi_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="None" name="debug"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="look at" valType="str" updates="None" name="endRoutineOn"/>
        <Param val="0.1" valType="num" updates="None" name="lookDur"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="roi_3" valType="code" updates="None" name="name"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_3['targetPos']" valType="list" updates="set every repeat" name="pos"/>
        <Param val="every look" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="roi onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </RegionOfInterestComponent>
      <PolygonComponent name="etrecord_pos_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="etrecord_pos_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="etRecord.pos" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="trial_4">
      <EyetrackerRecordComponent name="etRecord_4">
        <Param val="Start and Stop" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
      <PolygonComponent name="Fixation_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Fixation_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.0025, 0.0025)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="sample_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_4[&quot;stimImage&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="sample_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.125, 0.125)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_9">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_4[&quot;responseImage1&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_4[&quot;responseImage1_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_10">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_4[&quot;responseImage2&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_4[&quot;responseImage2_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="Response_11">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$thisTrial_4[&quot;responseImage3&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Response_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_4[&quot;responseImage3_pos&quot;]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="responseImage_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="cm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="polygon_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="4.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Delay_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Delay_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <RegionOfInterestComponent name="roi_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="None" name="debug"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="look at" valType="str" updates="None" name="endRoutineOn"/>
        <Param val="0.1" valType="num" updates="None" name="lookDur"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="roi_4" valType="code" updates="None" name="name"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="thisTrial_4['targetPos']" valType="list" updates="set every repeat" name="pos"/>
        <Param val="every look" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="roi onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </RegionOfInterestComponent>
      <PolygonComponent name="etrecord_pos_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="etrecord_pos_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="etRecord.pos" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="trigger">
      <KeyboardComponent name="key_resp">
        <Param val="'t'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="awaiting trigger" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="codeEnd">
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="print(thisTrial[&quot;responseImage1_pos&quot;])" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="console.log(thisTrial[&quot;responseImage1_pos&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="myCount1 += 1;&amp;#10;if ((myCount1 &gt;= trialNum)) {&amp;#10;    trials.finished = true;&amp;#10;}&amp;#10;console.log(myCount1);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="myCount1 += 1&amp;#10;&amp;#10;if myCount1 &gt;= trialNum:&amp;#10;    trials.finished = True&amp;#10; &amp;#10;print(myCount1) " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="codeEnd_2">
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="myCount2 += 1;&amp;#10;if ((myCount2 &gt; trialNum)) {&amp;#10;    trials_2.finished = true;&amp;#10;}&amp;#10;console.log(myCount2);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="myCount2 += 1&amp;#10;&amp;#10;if myCount2 &gt; trialNum:&amp;#10;    trials_2.finished = True&amp;#10; &amp;#10;&amp;#10;print(myCount2)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="codeEnd_3">
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="myCount3 += 1;&amp;#10;if ((myCount3 &gt; trialNum)) {&amp;#10;    trials_3.finished = true;&amp;#10;}&amp;#10;console.log(myCount3);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="myCount3 += 1&amp;#10;&amp;#10;if myCount3 &gt; trialNum:&amp;#10;    trials_3.finished = True&amp;#10; &amp;#10;&amp;#10;print(myCount3)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="codeEnd_4">
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="myCount4 += 1;&amp;#10;if ((myCount4 &gt; trialNum)) {&amp;#10;    trials_4.finished = true;&amp;#10;}&amp;#10;console.log(myCount4);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;myCount4 += 1&amp;#10;if myCount4 &gt; trialNum:&amp;#10;    trials_4.finished = True&amp;#10; &amp;#10;&amp;#10;print(myCount4)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Eyelink_setup"/>
    <Routine name="eyelink">
      <CodeComponent name="code_6">
        <Param val="# Written by: Sharif I. Kronemer&amp;#10;# Last Modified: 3/6/2023&amp;#10;&amp;#10;# Version 1&amp;#10;task_version = 'v1'&amp;#10;&amp;#10;# ***************************&amp;#10;# *** IMPORTANT LIBRARIES ***&amp;#10;# ***************************&amp;#10;&amp;#10;# Python and Psychopy Functions&amp;#10;import random&amp;#10;import warnings&amp;#10;from psychopy import visual, gui, data, core, event, monitors, logging, sound &amp;#10;from psychopy.hardware import keyboard&amp;#10;import numpy as np&amp;#10;import time&amp;#10;import pylink&amp;#10;import os&amp;#10;import platform&amp;#10;import sys&amp;#10;from scipy.signal import find_peaks&amp;#10;import argparse&amp;#10;from collections import deque&amp;#10;from scipy.io import loadmat, savemat&amp;#10;import statistics &amp;#10;from scipy.signal import savgol_filter, find_peaks, peak_prominences&amp;#10;from scipy.optimize import curve_fit&amp;#10;import math&amp;#10;&amp;#10;# EyeLink Functions&amp;#10;from EyeLinkCoreGraphicsPsychoPy import EyeLinkCoreGraphicsPsychoPy&amp;#10;from PIL import Image&amp;#10;from string import ascii_letters, digits&amp;#10;&amp;#10;&amp;#10;&amp;#10;class RealEyeLink:&amp;#10;    &amp;#10;    '''Object to create a real eyelink event'''&amp;#10;    &amp;#10;    def __init__(self):&amp;#10;        '''Parameters&amp;#10;           ----------&amp;#10;        eyelink_ver: float&amp;#10;            Version of eyelink this experiment is running on&amp;#10;           '''&amp;#10;                    &amp;#10;    def instruction_continue(self) -&gt; None:&amp;#10;        '''Either allows the subject to continue to the next screen of the task or exit'''&amp;#10;        wait_for_keypress = True # Wait indefinitely, terminates upon any key press&amp;#10;        if wait_for_keypress:&amp;#10;            event.waitKeys(keyList = ['space','escape','p','o'])&amp;#10;            clear_screen(win)&amp;#10;            &amp;#10;    def instructions_screens(self, instruction: str) -&gt; None: &amp;#10;        '''Function presents all the instructions needed for the task'''&amp;#10;        task_instructions = visual.TextStim(win, instruction, color = genv.getForegroundColor(), wrapWidth = scn_width/2, units = 'cm')&amp;#10;        clear_screen(win)&amp;#10;        task_instructions.draw()&amp;#10;        win.flip()   &amp;#10;        self.instruction_continue()&amp;#10;    &amp;#10;    def start_experiment(self) -&gt; None:&amp;#10;        self.instructions_screens(&quot;Main Task Phase.\n\nAre you ready to start?&quot;)&amp;#10;        quit_task()&amp;#10;&amp;#10;def setup(): &amp;#10;    # ********************&amp;#10;    # *** SETUP SCREEN ***&amp;#10;    # ********************&amp;#10;&amp;#10;    # Setup the subject info screen&amp;#10;    info = {'Session #': 0, 'Subject ID': 'Test', 'EyeLink': ['y','n'], 'EyeLink EDF': 'test.edf'} #, &amp;#10;        #'threshold opacity': 1.0, 'Response Condition (1 or 2)': [1, 2]}&amp;#10;&amp;#10;    dlg = gui.DlgFromDict(info, title = 'VisualAttn Experiment')&amp;#10;&amp;#10;    # Find experiment date&amp;#10;    info['date'] = data.getDateStr()&amp;#10;&amp;#10;    # Filename = Subject ID entered above&amp;#10;    filename = info['Subject ID']&amp;#10;&amp;#10;    # Set this variable to True if you use the built-in retina screen as your &amp;#10;    # primary display device on macOS. If have an external monitor, set this &amp;#10;    # variable True if you choose to &quot;Optimize for Built-in Retina Display&quot; &amp;#10;    # in the Displays preference settings.&amp;#10;    use_retina = True&amp;#10;&amp;#10;    # ********************&amp;#10;    # *** SETUP WINDOW ***&amp;#10;    # ********************&amp;#10;&amp;#10;    # Setup the window&amp;#10;    resolution = [2560, 1440] # Define screen resolution&amp;#10;    win = visual.Window(size = resolution, color = [1,1,1], monitor = 'testMonitor', fullscr = True, units ='cm') #Set color and fullscreen mode (True or False)&amp;#10;&amp;#10;    # *****************************************&amp;#10;    # *** MANAGE DATA FOLDERS AND FILENAMES ***&amp;#10;    # *****************************************&amp;#10;&amp;#10;    # Behavioral data file&amp;#10;    behavioral_folder = 'Behavioral_Data'&amp;#10;&amp;#10;    # Eyelink data file&amp;#10;    results_folder = 'EyeLink_Data'&amp;#10;&amp;#10;    # Find experiment date&amp;#10;    info['date'] = data.getDateStr()&amp;#10;&amp;#10;    # Filename = Subject ID entered above&amp;#10;    filename = info['Subject ID']&amp;#10;&amp;#10;    # EyeLink filename&amp;#10;    tmp_str = info['EyeLink EDF']&amp;#10;&amp;#10;    # Strip trailing characters, ignore the &quot;.edf&quot; extension&amp;#10;    edf_fname = tmp_str.rstrip().split('.')[0]&amp;#10;&amp;#10;    # Check if the EyeLink filename is valid (length &lt;= 8 &amp; no special char)&amp;#10;    allowed_char = ascii_letters + digits + '_'&amp;#10;&amp;#10;    # If too many characters in EyeLink filename&amp;#10;    if not all([c in allowed_char for c in edf_fname]):&amp;#10;        print('ERROR: *** Invalid EDF filename')&amp;#10;        core.quit()  # abort experiment&amp;#10;&amp;#10;    elif len(edf_fname) &gt; 8:&amp;#10;        print('ERROR: *** EDF filename should not exceed 8 characters')&amp;#10;        core.quit()  # abort experiment&amp;#10;&amp;#10;    # We download EDF data file from the EyeLink Host PC to the local hard&amp;#10;    # drive at the end of each testing session, here we rename the EDF to&amp;#10;    # include session start date/time&amp;#10;    time_str = time.strftime(&quot;_%Y_%m_%d_%H_%M&quot;, time.localtime())&amp;#10;    session_identifier = edf_fname + time_str&amp;#10;&amp;#10;    # Check for the behavioral data directory, otherwise make it&amp;#10;    if not os.path.isdir('Behavioral_Data'):&amp;#10;            os.makedirs('Behavioral_Data')  # if this fails (e.g. permissions) we will get error&amp;#10;&amp;#10;    # Check for the EyeLink data directory, otherwise make it&amp;#10;    if not os.path.isdir('EyeLink_Data'):&amp;#10;            os.makedirs('EyeLink_Data') # if this fails (e.g. permissions) we will get error&amp;#10;&amp;#10;    # Define EyeLink folder - directory of task + folder name&amp;#10;    eyelinkFolder = (results_folder + os.path.sep)&amp;#10;&amp;#10;    # Show only critical log messages in the PsychoPy console&amp;#10;    logFile = logging.LogFile(behavioral_folder + os.path.sep + filename + '_Session_'+str(info['Session #'])+'_Glare_Illusion_Perception_'+info['date']+'_'+task_version+'.log', level=logging.EXP)&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;    # EyeLink Dummy mode? - Set to False if testing with actual system&amp;#10;    if info['EyeLink'] == 'y':&amp;#10;        dummy_mode = False&amp;#10;        &amp;#10;    elif info['EyeLink'] == 'n':&amp;#10;        dummy_mode = True&amp;#10;&amp;#10;    # Step 1: Connect to the EyeLink Host PC&amp;#10;&amp;#10;    # The Host IP address, by default, is &quot;100.1.1.1&quot;.&amp;#10;    # the &quot;el_tracker&quot; objected created here can be accessed through the Pylink&amp;#10;    # Set the Host PC address to &quot;None&quot; (without quotes) to run the script&amp;#10;    # in &quot;Dummy Mode&quot;&amp;#10;    if dummy_mode:&amp;#10;        el_tracker = pylink.EyeLink(None)&amp;#10;    else:&amp;#10;        try:&amp;#10;            el_tracker = pylink.EyeLink(&quot;100.1.1.1&quot;)&amp;#10;        except RuntimeError as error:&amp;#10;            print('ERROR:', error)&amp;#10;            core.quit()&amp;#10;            sys.exit()&amp;#10;        &amp;#10;    # Step 2: Open an EDF data file on the Host PC&amp;#10;&amp;#10;    # Define edf fileanme&amp;#10;    edf_file = edf_fname + &quot;.EDF&quot;&amp;#10;&amp;#10;    try:&amp;#10;        el_tracker.openDataFile(edf_file)&amp;#10;    except RuntimeError as err:&amp;#10;        print('ERROR:', err)&amp;#10;        # close the link if we have one open&amp;#10;        if el_tracker.isConnected():&amp;#10;            el_tracker.close()&amp;#10;        core.quit()&amp;#10;        sys.exit()&amp;#10;&amp;#10;    # Step 3: Configure the tracker&amp;#10;&amp;#10;    # Put the tracker in offline mode before we change tracking parameters&amp;#10;    el_tracker.setOfflineMode()&amp;#10;&amp;#10;    # Get the software version:  1-EyeLink I, 2-EyeLink II, 3/4-EyeLink 1000,&amp;#10;    # 5-EyeLink 1000 Plus, 6-Portable DUO&amp;#10;    if dummy_mode:&amp;#10;        eyelink_ver = 0  # set version to 0, in case running in Dummy mode&amp;#10;    else:&amp;#10;        eyelink_ver = 5&amp;#10;        &amp;#10;    if not dummy_mode:&amp;#10;        vstr = el_tracker.getTrackerVersionString()&amp;#10;        eyelink_ver = int(vstr.split()[-1].split('.')[0])&amp;#10;        # print out some version info in the shell&amp;#10;        print('Running experiment on %s, version %d' % (vstr, eyelink_ver))&amp;#10;&amp;#10;    # File and Link data control&amp;#10;    # what eye events to save in the EDF file, include everything by default&amp;#10;    file_event_flags = 'LEFT,RIGHT,FIXATION,SACCADE,BLINK,MESSAGE,BUTTON,INPUT'&amp;#10;    # what eye events to make available over the link, include everything by default&amp;#10;    link_event_flags = 'LEFT,RIGHT,FIXATION,SACCADE,BLINK,BUTTON,FIXUPDATE,INPUT'&amp;#10;    # what sample data to save in the EDF data file and to make available&amp;#10;    # over the link, include the 'HTARGET' flag to save head target sticker&amp;#10;    # data for supported eye trackers&amp;#10;    if eyelink_ver &gt; 3:&amp;#10;        file_sample_flags = 'LEFT,RIGHT,GAZE,HREF,RAW,AREA,HTARGET,GAZERES,BUTTON,STATUS,INPUT'&amp;#10;        link_sample_flags = 'LEFT,RIGHT,GAZE,GAZERES,AREA,HTARGET,STATUS,INPUT'&amp;#10;    else:&amp;#10;        file_sample_flags = 'LEFT,RIGHT,GAZE,HREF,RAW,AREA,GAZERES,BUTTON,STATUS,INPUT'&amp;#10;        link_sample_flags = 'LEFT,RIGHT,GAZE,GAZERES,AREA,STATUS,INPUT'&amp;#10;    el_tracker.sendCommand(&quot;file_event_filter = %s&quot; % file_event_flags)&amp;#10;    el_tracker.sendCommand(&quot;file_sample_data = %s&quot; % file_sample_flags)&amp;#10;    el_tracker.sendCommand(&quot;link_event_filter = %s&quot; % link_event_flags)&amp;#10;    el_tracker.sendCommand(&quot;link_sample_data = %s&quot; % link_sample_flags)&amp;#10;&amp;#10;    # Set EyeLink sample rate&amp;#10;    if eyelink_ver &gt; 2 and not dummy_mode:&amp;#10;        el_tracker.sendCommand(&quot;sample_rate 1000&quot;)&amp;#10;        &amp;#10;    # Choose a calibration type, H3, HV3, HV5, HV13 (HV = horizontal/vertical),&amp;#10;    el_tracker.sendCommand(&quot;calibration_type = HV9&quot;)&amp;#10;    # Set a gamepad button to accept calibration/drift check target&amp;#10;    # You need a supported gamepad/button box that is connected to the Host PC&amp;#10;    el_tracker.sendCommand(&quot;button_function 5 'accept_target_fixation'&quot;)&amp;#10;&amp;#10;    # Shrink the spread of the calibration/validation targets&amp;#10;    # if the default outermost targets are not all visible in the bore.&amp;#10;    # The default &lt;x, y display proportion&gt; is 0.88, 0.83 (88% of the display&amp;#10;    # horizontally and 83% vertically)&amp;#10;    el_tracker.sendCommand('calibration_area_proportion 0.88 0.83')&amp;#10;    el_tracker.sendCommand('validation_area_proportion 0.88 0.83')&amp;#10;&amp;#10;    # Get the native screen resolution used by PsychoPy&amp;#10;    scn_width, scn_height = win.size&amp;#10;&amp;#10;    # Resolution fix for Mac retina displays&amp;#10;    if 'Darwin' in platform.system():&amp;#10;        if use_retina:&amp;#10;            scn_width = int(scn_width/2.0)&amp;#10;            scn_height = int(scn_height/2.0)&amp;#10;            &amp;#10;    # Optional: online drift correction.&amp;#10;    # See the EyeLink 1000 / EyeLink 1000 Plus User Manual&amp;#10;&amp;#10;    # Online drift correction to mouse-click position:&amp;#10;    # el_tracker.sendCommand('driftcorrect_cr_disable = OFF')&amp;#10;    # el_tracker.sendCommand('normal_click_dcorr = ON')&amp;#10;&amp;#10;    # Online drift correction to a fixed location, e.g., screen center&amp;#10;    el_tracker.sendCommand('driftcorrect_cr_disable = OFF')&amp;#10;    el_tracker.sendCommand('online_dcorr_refposn %d,%d' % (int(scn_width/2.0),&amp;#10;                                                            int(scn_height/2.0)))&amp;#10;    el_tracker.sendCommand('online_dcorr_button = ON')&amp;#10;    el_tracker.sendCommand('normal_click_dcorr = OFF')&amp;#10;&amp;#10;    # Pass the display pixel coordinates (left, top, right, bottom) to the tracker&amp;#10;    # see the EyeLink Installation Guide, &quot;Customizing Screen Settings&quot;&amp;#10;    el_coords = &quot;screen_pixel_coords = 0 0 %d %d&quot; % (scn_width - 1, scn_height - 1)&amp;#10;    el_tracker.sendCommand(el_coords)&amp;#10;&amp;#10;    # Write a DISPLAY_COORDS message to the EDF file&amp;#10;    # Data Viewer needs this piece of info for proper visualization, see Data&amp;#10;    # Viewer User Manual, &quot;Protocol for EyeLink Data to Viewer Integration&quot;&amp;#10;    dv_coords = &quot;DISPLAY_COORDS  0 0 %d %d&quot; % (scn_width - 1, scn_height - 1)&amp;#10;    el_tracker.sendMessage(dv_coords)&amp;#10;&amp;#10;    # Configure a graphics environment (genv) for tracker calibration&amp;#10;    genv = EyeLinkCoreGraphicsPsychoPy(el_tracker, win)&amp;#10;    print(genv)  # print out the version number of the CoreGraphics library&amp;#10;&amp;#10;    # Set background and foreground colors for the calibration target&amp;#10;    # in PsychoPy, (-1, -1, -1)=black, (1, 1, 1)=white, (0, 0, 0)=mid-gray&amp;#10;    foreground_color = (-1, -1, -1)&amp;#10;    background_color = win.color # Use the same background color as the entire study&amp;#10;    genv.setCalibrationColors(foreground_color, background_color)&amp;#10;&amp;#10;    # Set up the calibration target&amp;#10;&amp;#10;    # Use a picture as the calibration target&amp;#10;    genv.setTargetType('circle')&amp;#10;    genv.setTargetSize(24)&amp;#10;    #genv.setPictureTarget(os.path.join('images', 'fixTarget.bmp')) #CALIBRATION TARGET IMAGE&amp;#10;&amp;#10;    # Configure the size of the calibration target (in pixels)&amp;#10;    # this option applies only to &quot;circle&quot; and &quot;spiral&quot; targets&amp;#10;    # genv.setTargetSize(24)&amp;#10;&amp;#10;    # Beeps to play during calibration, validation and drift correction&amp;#10;    # parameters: target, good, error&amp;#10;    #     target -- sound to play when target moves&amp;#10;    #     good -- sound to play on successful operation&amp;#10;    #     error -- sound to play on failure or interruption&amp;#10;    # Each parameter could be ''--default sound, 'off'--no sound, or a wav file&amp;#10;    genv.setCalibrationSounds('off', 'off', 'off')&amp;#10;&amp;#10;    # Resolution fix for macOS retina display issues&amp;#10;    if use_retina:&amp;#10;        genv.fixMacRetinaDisplay()&amp;#10;&amp;#10;    # Request Pylink to use the PsychoPy window we opened above for calibration&amp;#10;    pylink.openGraphicsEx(genv)&amp;#10;&amp;#10;    #calibration task constants&amp;#10;    #set random seed&amp;#10;    rng = np.random.default_rng()&amp;#10;&amp;#10;    return &amp;#10;&amp;#10;&amp;#10;def main():&amp;#10;&amp;#10;    # *********************&amp;#10;    # *** Setup EyeLink ***&amp;#10;    # *********************&amp;#10;    &amp;#10;    rel = RealEyeLink() #sets up real eyelink object&amp;#10;&amp;#10;    # If running EyeLink&amp;#10;    if not dummy_mode:&amp;#10;        task_msg = 'Press O to calibrate tracker'&amp;#10;        rel.instructions_screens(task_msg)&amp;#10;    &amp;#10;    if not dummy_mode:&amp;#10;        try:&amp;#10;            el_tracker.doTrackerSetup()&amp;#10;        except RuntimeError as err:&amp;#10;            print('ERROR:', err)&amp;#10;            el_tracker.exitCalibration()&amp;#10;            &amp;#10;    el_tracker.setOfflineMode()&amp;#10;    &amp;#10;    try:&amp;#10;        el_tracker.startRecording(1, 1, 1, 1)&amp;#10;    except RuntimeError as error:&amp;#10;        print(&quot;ERROR:&quot;, error)&amp;#10;        rel.terminate_task()&amp;#10;&amp;#10;    eye_used = el_tracker.eyeAvailable()&amp;#10;    &amp;#10;    if eye_used == 1:&amp;#10;        el_tracker.sendMessage(&quot;EYE_USED 1 RIGHT&quot;)&amp;#10;    elif eye_used == 0 or eye_used == 2:&amp;#10;        el_tracker.sendMessage(&quot;EYE_USED 0 LEFT&quot;)&amp;#10;        eye_used = 0&amp;#10;    else:&amp;#10;        print(&quot;Error in getting the eye information!&quot;)&amp;#10;    pylink.pumpDelay(100)&amp;#10;    &amp;#10;    return &amp;#10;    &amp;#10;&amp;#10;    setup()&amp;#10;    main()" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as warnings from 'warnings';&amp;#10;import {core, data, event, gui, logging, monitors, sound, visual} from 'psychopy';&amp;#10;import {keyboard} from 'psychopy/hardware';&amp;#10;import * as np from 'numpy';&amp;#10;import * as time from 'time';&amp;#10;import * as pylink from 'pylink';&amp;#10;import * as os from 'os';&amp;#10;import * as platform from 'platform';&amp;#10;import * as sys from 'sys';&amp;#10;import {find_peaks} from 'scipy/signal';&amp;#10;import * as argparse from 'argparse';&amp;#10;import {deque} from 'collections';&amp;#10;import {loadmat, savemat} from 'scipy/io';&amp;#10;import * as statistics from 'statistics';&amp;#10;import {find_peaks, peak_prominences, savgol_filter} from 'scipy/signal';&amp;#10;import {curve_fit} from 'scipy/optimize';&amp;#10;import * as math from 'math';&amp;#10;import {EyeLinkCoreGraphicsPsychoPy} from 'EyeLinkCoreGraphicsPsychoPy';&amp;#10;import {Image} from 'PIL';&amp;#10;import {ascii_letters, digits} from 'string';&amp;#10;var _pj;&amp;#10;var task_version;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;task_version = &quot;v1&quot;;&amp;#10;class RealEyeLink {&amp;#10;    /* Object to create a real eyelink event */&amp;#10;    constructor() {&amp;#10;        /*Parameters&amp;#10;        ----------&amp;#10;        eyelink_ver: float&amp;#10;        Version of eyelink this experiment is running on&amp;#10;        */&amp;#10;    }&amp;#10;    instruction_continue() {&amp;#10;        /* Either allows the subject to continue to the next screen of the task or exit */&amp;#10;        var wait_for_keypress;&amp;#10;        wait_for_keypress = true;&amp;#10;        if (wait_for_keypress) {&amp;#10;            psychoJS.eventManager.waitKeys({&quot;keyList&quot;: [&quot;space&quot;, &quot;escape&quot;, &quot;p&quot;, &quot;o&quot;]});&amp;#10;            clear_screen(psychoJS.window);&amp;#10;        }&amp;#10;    }&amp;#10;    instructions_screens(instruction) {&amp;#10;        /* Function presents all the instructions needed for the task */&amp;#10;        var task_instructions;&amp;#10;        task_instructions = new visual.TextStim(psychoJS.window, instruction, {&quot;color&quot;: genv.getForegroundColor(), &quot;wrapWidth&quot;: (scn_width / 2), &quot;units&quot;: &quot;cm&quot;});&amp;#10;        clear_screen(psychoJS.window);&amp;#10;        task_instructions.draw();&amp;#10;        psychoJS.window.flip();&amp;#10;        this.instruction_continue();&amp;#10;    }&amp;#10;    start_experiment() {&amp;#10;        this.instructions_screens(&quot;Main Task Phase.\n\nAre you ready to start?&quot;);&amp;#10;        quit_task();&amp;#10;    }&amp;#10;}&amp;#10;function setup() {&amp;#10;    var allowed_char, background_color, behavioral_folder, dlg, dummy_mode, dv_coords, edf_file, edf_fname, el_coords, el_tracker, eyelinkFolder, eyelink_ver, file_event_flags, file_sample_flags, filename, foreground_color, genv, info, link_event_flags, link_sample_flags, logFile, resolution, results_folder, rng, scn_height, scn_width, session_identifier, time_str, tmp_str, use_retina, vstr, win;&amp;#10;    info = {&quot;Session #&quot;: 0, &quot;Subject ID&quot;: &quot;Test&quot;, &quot;EyeLink&quot;: [&quot;y&quot;, &quot;n&quot;], &quot;EyeLink EDF&quot;: &quot;test.edf&quot;};&amp;#10;    dlg = new gui.DlgFromDict(info, {&quot;title&quot;: &quot;VisualAttn Experiment&quot;});&amp;#10;    info[&quot;date&quot;] = data.getDateStr();&amp;#10;    filename = info[&quot;Subject ID&quot;];&amp;#10;    use_retina = true;&amp;#10;    resolution = [2560, 1440];&amp;#10;    win = new visual.Window({&quot;size&quot;: resolution, &quot;color&quot;: [1, 1, 1], &quot;monitor&quot;: &quot;testMonitor&quot;, &quot;fullscr&quot;: true, &quot;units&quot;: &quot;cm&quot;});&amp;#10;    behavioral_folder = &quot;Behavioral_Data&quot;;&amp;#10;    results_folder = &quot;EyeLink_Data&quot;;&amp;#10;    info[&quot;date&quot;] = data.getDateStr();&amp;#10;    filename = info[&quot;Subject ID&quot;];&amp;#10;    tmp_str = info[&quot;EyeLink EDF&quot;];&amp;#10;    edf_fname = tmp_str.rstrip().split(&quot;.&quot;)[0];&amp;#10;    allowed_char = ((ascii_letters + digits) + &quot;_&quot;);&amp;#10;    if ((! all(function () {&amp;#10;    var _pj_a = [], _pj_b = edf_fname;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var c = _pj_b[_pj_c];&amp;#10;        _pj_a.push(_pj.in_es6(c, allowed_char));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this)))) {&amp;#10;        console.log(&quot;ERROR: *** Invalid EDF filename&quot;);&amp;#10;        core.quit();&amp;#10;    } else {&amp;#10;        if ((edf_fname.length &gt; 8)) {&amp;#10;            console.log(&quot;ERROR: *** EDF filename should not exceed 8 characters&quot;);&amp;#10;            core.quit();&amp;#10;        }&amp;#10;    }&amp;#10;    time_str = time.strftime(&quot;_%Y_%m_%d_%H_%M&quot;, time.localtime());&amp;#10;    session_identifier = (edf_fname + time_str);&amp;#10;    if ((! os.path.isdir(&quot;Behavioral_Data&quot;))) {&amp;#10;        os.makedirs(&quot;Behavioral_Data&quot;);&amp;#10;    }&amp;#10;    if ((! os.path.isdir(&quot;EyeLink_Data&quot;))) {&amp;#10;        os.makedirs(&quot;EyeLink_Data&quot;);&amp;#10;    }&amp;#10;    eyelinkFolder = (results_folder + os.path.sep);&amp;#10;    logFile = new logging.LogFile((((((((((behavioral_folder + os.path.sep) + filename) + &quot;_Session_&quot;) + info[&quot;Session #&quot;].toString()) + &quot;_Glare_Illusion_Perception_&quot;) + info[&quot;date&quot;]) + &quot;_&quot;) + task_version) + &quot;.log&quot;), {&quot;level&quot;: logging.EXP});&amp;#10;    if ((info[&quot;EyeLink&quot;] === &quot;y&quot;)) {&amp;#10;        dummy_mode = false;&amp;#10;    } else {&amp;#10;        if ((info[&quot;EyeLink&quot;] === &quot;n&quot;)) {&amp;#10;            dummy_mode = true;&amp;#10;        }&amp;#10;    }&amp;#10;    if (dummy_mode) {&amp;#10;        el_tracker = new pylink.EyeLink(null);&amp;#10;    } else {&amp;#10;        try {&amp;#10;            el_tracker = new pylink.EyeLink(&quot;100.1.1.1&quot;);&amp;#10;        } catch(error) {&amp;#10;            if ((error instanceof RuntimeError)) {&amp;#10;                console.log(&quot;ERROR:&quot;, error);&amp;#10;                core.quit();&amp;#10;                sys.exit();&amp;#10;            } else {&amp;#10;                throw error;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    edf_file = (edf_fname + &quot;.EDF&quot;);&amp;#10;    try {&amp;#10;        el_tracker.openDataFile(edf_file);&amp;#10;    } catch(err) {&amp;#10;        if ((err instanceof RuntimeError)) {&amp;#10;            console.log(&quot;ERROR:&quot;, err);&amp;#10;            if (el_tracker.isConnected()) {&amp;#10;                el_tracker.close();&amp;#10;            }&amp;#10;            core.quit();&amp;#10;            sys.exit();&amp;#10;        } else {&amp;#10;            throw err;&amp;#10;        }&amp;#10;    }&amp;#10;    el_tracker.setOfflineMode();&amp;#10;    if (dummy_mode) {&amp;#10;        eyelink_ver = 0;&amp;#10;    } else {&amp;#10;        eyelink_ver = 5;&amp;#10;    }&amp;#10;    if ((! dummy_mode)) {&amp;#10;        vstr = el_tracker.getTrackerVersionString();&amp;#10;        eyelink_ver = Number.parseInt(vstr.split().slice((- 1))[0].split(&quot;.&quot;)[0]);&amp;#10;        console.log(`Running experiment on ${vstr}, version ${eyelink_ver}`);&amp;#10;    }&amp;#10;    file_event_flags = &quot;LEFT,RIGHT,FIXATION,SACCADE,BLINK,MESSAGE,BUTTON,INPUT&quot;;&amp;#10;    link_event_flags = &quot;LEFT,RIGHT,FIXATION,SACCADE,BLINK,BUTTON,FIXUPDATE,INPUT&quot;;&amp;#10;    if ((eyelink_ver &gt; 3)) {&amp;#10;        file_sample_flags = &quot;LEFT,RIGHT,GAZE,HREF,RAW,AREA,HTARGET,GAZERES,BUTTON,STATUS,INPUT&quot;;&amp;#10;        link_sample_flags = &quot;LEFT,RIGHT,GAZE,GAZERES,AREA,HTARGET,STATUS,INPUT&quot;;&amp;#10;    } else {&amp;#10;        file_sample_flags = &quot;LEFT,RIGHT,GAZE,HREF,RAW,AREA,GAZERES,BUTTON,STATUS,INPUT&quot;;&amp;#10;        link_sample_flags = &quot;LEFT,RIGHT,GAZE,GAZERES,AREA,STATUS,INPUT&quot;;&amp;#10;    }&amp;#10;    el_tracker.sendCommand(`file_event_filter = ${file_event_flags}`);&amp;#10;    el_tracker.sendCommand(`file_sample_data = ${file_sample_flags}`);&amp;#10;    el_tracker.sendCommand(`link_event_filter = ${link_event_flags}`);&amp;#10;    el_tracker.sendCommand(`link_sample_data = ${link_sample_flags}`);&amp;#10;    if (((eyelink_ver &gt; 2) &amp;&amp; (! dummy_mode))) {&amp;#10;        el_tracker.sendCommand(&quot;sample_rate 1000&quot;);&amp;#10;    }&amp;#10;    el_tracker.sendCommand(&quot;calibration_type = HV9&quot;);&amp;#10;    el_tracker.sendCommand(&quot;button_function 5 'accept_target_fixation'&quot;);&amp;#10;    el_tracker.sendCommand(&quot;calibration_area_proportion 0.88 0.83&quot;);&amp;#10;    el_tracker.sendCommand(&quot;validation_area_proportion 0.88 0.83&quot;);&amp;#10;    [scn_width, scn_height] = psychoJS.window.size;&amp;#10;    if (_pj.in_es6(&quot;Darwin&quot;, platform.system())) {&amp;#10;        if (use_retina) {&amp;#10;            scn_width = Number.parseInt((scn_width / 2.0));&amp;#10;            scn_height = Number.parseInt((scn_height / 2.0));&amp;#10;        }&amp;#10;    }&amp;#10;    el_tracker.sendCommand(&quot;driftcorrect_cr_disable = OFF&quot;);&amp;#10;    el_tracker.sendCommand(`online_dcorr_refposn ${Number.parseInt((scn_width / 2.0))},${Number.parseInt((scn_height / 2.0))}`);&amp;#10;    el_tracker.sendCommand(&quot;online_dcorr_button = ON&quot;);&amp;#10;    el_tracker.sendCommand(&quot;normal_click_dcorr = OFF&quot;);&amp;#10;    el_coords = `screen_pixel_coords = 0 0 ${(scn_width - 1)} ${(scn_height - 1)}`;&amp;#10;    el_tracker.sendCommand(el_coords);&amp;#10;    dv_coords = `DISPLAY_COORDS  0 0 ${(scn_width - 1)} ${(scn_height - 1)}`;&amp;#10;    el_tracker.sendMessage(dv_coords);&amp;#10;    genv = new EyeLinkCoreGraphicsPsychoPy(el_tracker, psychoJS.window);&amp;#10;    console.log(genv);&amp;#10;    foreground_color = [(- 1), (- 1), (- 1)];&amp;#10;    background_color = psychoJS.window.color;&amp;#10;    genv.setCalibrationColors(foreground_color, background_color);&amp;#10;    genv.setTargetType(&quot;circle&quot;);&amp;#10;    genv.setTargetSize(24);&amp;#10;    genv.setCalibrationSounds(&quot;off&quot;, &quot;off&quot;, &quot;off&quot;);&amp;#10;    if (use_retina) {&amp;#10;        genv.fixMacRetinaDisplay();&amp;#10;    }&amp;#10;    pylink.openGraphicsEx(genv);&amp;#10;    rng = np.random.default_rng();&amp;#10;    return;&amp;#10;}&amp;#10;function main() {&amp;#10;    var eye_used, rel, task_msg;&amp;#10;    rel = new RealEyeLink();&amp;#10;    if ((! dummy_mode)) {&amp;#10;        task_msg = &quot;Press O to calibrate tracker&quot;;&amp;#10;        rel.instructions_screens(task_msg);&amp;#10;    }&amp;#10;    if ((! dummy_mode)) {&amp;#10;        try {&amp;#10;            el_tracker.doTrackerSetup();&amp;#10;        } catch(err) {&amp;#10;            if ((err instanceof RuntimeError)) {&amp;#10;                console.log(&quot;ERROR:&quot;, err);&amp;#10;                el_tracker.exitCalibration();&amp;#10;            } else {&amp;#10;                throw err;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    el_tracker.setOfflineMode();&amp;#10;    try {&amp;#10;        el_tracker.startRecording(1, 1, 1, 1);&amp;#10;    } catch(error) {&amp;#10;        if ((error instanceof RuntimeError)) {&amp;#10;            console.log(&quot;ERROR:&quot;, error);&amp;#10;            rel.terminate_task();&amp;#10;        } else {&amp;#10;            throw error;&amp;#10;        }&amp;#10;    }&amp;#10;    eye_used = el_tracker.eyeAvailable();&amp;#10;    if ((eye_used === 1)) {&amp;#10;        el_tracker.sendMessage(&quot;EYE_USED 1 RIGHT&quot;);&amp;#10;    } else {&amp;#10;        if (((eye_used === 0) || (eye_used === 2))) {&amp;#10;            el_tracker.sendMessage(&quot;EYE_USED 0 LEFT&quot;);&amp;#10;            eye_used = 0;&amp;#10;        } else {&amp;#10;            console.log(&quot;Error in getting the eye information!&quot;);&amp;#10;        }&amp;#10;    }&amp;#10;    pylink.pumpDelay(100);&amp;#10;    return;&amp;#10;    setup();&amp;#10;    main();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <EyetrackerCalibrationRoutine name="calibration">
      <Param name="borderColor" updates="None" val="black" valType="color"/>
      <Param name="borderWidth" updates="None" val="2" valType="num"/>
      <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="black" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="2" valType="num"/>
      <Param name="innerFillColor" updates="None" val="green" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.0035" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="calibration" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.01" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="NINE_POINTS" valType="str"/>
      <Param name="textColor" updates="None" val="white" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerCalibrationRoutine>
    <EyetrackerValidationRoutine name="validation">
      <Param name="borderColor" updates="None" val="black" valType="color"/>
      <Param name="borderWidth" updates="None" val="2" valType="num"/>
      <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
      <Param name="cursorFillColor" updates="None" val="green" valType="color"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="black" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="2" valType="num"/>
      <Param name="innerFillColor" updates="None" val="green" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.0035" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="validation" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.01" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="saveAsImg" updates="None" val="False" valType="bool"/>
      <Param name="showResults" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="NINE_POINTS" valType="str"/>
      <Param name="targetPositions" updates="None" val="NINE_POINTS" valType="list"/>
      <Param name="textColor" updates="None" val="auto" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerValidationRoutine>
  </Routines>
  <Flow>
    <Routine name="eyelink"/>
    <EyetrackerCalibrationRoutine name="calibration"/>
    <EyetrackerValidationRoutine name="validation"/>
    <Routine name="codeStart"/>
    <Routine name="trigger"/>
    <Routine name="baseline"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$&quot;{}/{}-{}.csv&quot;.format(dirpath, 0, &quot;PRED&quot;)" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="trialNum" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="codeEnd"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="baseline"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$&quot;{}/{}-{}.csv&quot;.format(dirpath, 1, &quot;UNPRED&quot;)" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="trialNum" valType="num"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="codeEnd_2"/>
    <Routine name="trial_2"/>
    <LoopTerminator name="trials_2"/>
    <Routine name="baseline"/>
    <LoopInitiator loopType="TrialHandler" name="trials_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$&quot;{}/{}-{}.csv&quot;.format(dirpath, 2, &quot;PRED&quot;)" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="trialNum" valType="num"/>
      <Param name="name" updates="None" val="trials_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="codeEnd_3"/>
    <Routine name="trial_3"/>
    <LoopTerminator name="trials_3"/>
    <Routine name="baseline"/>
    <LoopInitiator loopType="TrialHandler" name="trials_4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$&quot;{}/{}-{}.csv&quot;.format(dirpath, 3, &quot;UNPRED&quot;)" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="trialNum" valType="num"/>
      <Param name="name" updates="None" val="trials_4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="codeEnd_4"/>
    <Routine name="trial_4"/>
    <LoopTerminator name="trials_4"/>
    <Routine name="baseline"/>
  </Flow>
</PsychoPy2experiment>
